//noinspection GroovyAssignabilityCheck

plugins {
    id 'org.springframework.boot' version '2.3.12.RELEASE'
    id 'java'
    id 'war'
    id "org.sonarqube" version "2.7"
    id 'net.ltgt.apt' version '0.8'
    id "org.liquibase.gradle" version "2.0.4"
}

apply plugin: 'io.spring.dependency-management'

group = 'org.bookworm'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.liquibase:liquibase-core:4.6.1'
    compileOnly 'org.liquibase:liquibase-gradle-plugin:2.0.4'
    compileOnly 'org.projectlombok:lombok:1.18.22'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql:42.3.1'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.intuit.karate:karate-core:1.1.0'
    testImplementation 'com.intuit.karate:karate-junit5:1.1.0'
}

bootJar {
    manifest {
        attributes 'Start-Class': 'org.bookworm.library.LibraryApplication'
    }
}

sourceSets {
    test {
        resources {
            srcDir file('src/test/java')
            exclude '**/*.java'
        }
    }
}

test {
    useJUnitPlatform()
    systemProperty "karate.options", System.properties.getProperty("karate.options")
    systemProperty "karate.env", System.properties.getProperty("karate.env")
    outputs.upToDateWhen { false }
}

task karateDebug(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    main = 'com.intuit.karate.cli.Main'
}