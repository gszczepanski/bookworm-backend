default:
  image: gradle:6-jdk11-alpine

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  CI_REGISTRY: $CI_REGISTRY
  CI_DEPLOY_USER: $CI_DEPLOY_USER
  CI_DEPLOY_PASSWORD: $CI_DEPLOY_PASSWORD
  PROJECT_REGISTRY_PATH: $CI_REGISTRY_IMAGE
  BACKEND_IMAGE_PATH: $PROJECT_REGISTRY_PATH/bookworm_backend:latest
  POSTGRES_IMAGE_PATH: $PROJECT_REGISTRY_PATH/bookworm_postgres:latest


before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

cache:
  paths:
    - .m2/repository/
    - target/

stages:
  - build-java
  - build-images
  - test-java

build-java:
  stage: build-java
  script:
    - gradle bootJar --warning-mode all
  artifacts:
    paths:
      - build/libs/bookworm-backend-0.0.1-SNAPSHOT.jar
    expire_in: 1 hour

build-backend-image:
  stage: build-images
  script:
    - ln ./build/libs/bookworm-backend-0.0.1-SNAPSHOT.jar ./docker/bookworm_backend/bookworm-backend-0.0.1-SNAPSHOT.jar
    - cd docker/bookworm_backend
    - docker build -t bookworm_backend .
    - docker tag bookworm_backend $BACKEND_IMAGE_PATH
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker push $BACKEND_IMAGE_PATH

build-postgres-image:
  stage: build-images
  script:
    - cd docker/bookworm_postgres
    - docker build -t bookworm_postgres .
    - docker tag bookworm_postgres $POSTGRES_IMAGE_PATH
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker push $POSTGRES_IMAGE_PATH

test-java:
  stage: test-java
  image: docker/compose:alpine-1.29.2
  script:
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker pull $BACKEND_IMAGE_PATH
    - docker tag $BACKEND_IMAGE_PATH bookworm_backend:latest
    - docker pull $POSTGRES_IMAGE_PATH
    - docker tag $POSTGRES_IMAGE_PATH bookworm_postgres:latest
    - docker-compose up bookworm_postgres bookworm_keycloak bookworm_backend
    - cd .. && gradle check && cd docker
    - docker-compose down
  artifacts:
    paths:
      - build/karate-reports/*
    expire_in: 1 hour
