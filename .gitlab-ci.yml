default:
  image: docker/compose:alpine-1.29.2

variables:
  CI_REGISTRY: $CI_REGISTRY
  CI_DEPLOY_USER: $CI_DEPLOY_USER
  CI_DEPLOY_PASSWORD: $CI_DEPLOY_PASSWORD
  CI_PROJECT_NAME: $CI_PROJECT_NAME
  CI_COMMIT_REF_SLUG: $CI_COMMIT_REF_SLUG
  PROJECT_REGISTRY_PATH: $CI_REGISTRY_IMAGE
  BACKEND_IMAGE_PATH: $PROJECT_REGISTRY_PATH/bookworm_backend:latest
  POSTGRES_IMAGE_PATH: $PROJECT_REGISTRY_PATH/bookworm_postgres:latest
  BOOKWORM_HOST: $BOOKWORM_HOST
  SONAR_TOKEN: $SONAR_TOKEN
  SONAR_HOST_URL: $SONAR_HOST_URL
  SONAR_PROJECT_KEY: org.bookworm:$CI_PROJECT_NAME
  GIT_DEPTH: 0

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - build/
    - .gradle/

stages:
  - build-java
  - build-images
  - deploy
  - test-java
  - sonar
  - clean

build-backend:
  stage: build-java
  image: gradle:6-jdk11-alpine
  script:
    - gradle bootJar --build-cache --warning-mode all
  artifacts:
    paths:
      - build/libs/bookworm-backend-0.0.1-SNAPSHOT.jar
    expire_in: 1 hour

build-backend-image:
  stage: build-images
  script:
    - ln ./build/libs/bookworm-backend-0.0.1-SNAPSHOT.jar ./docker/bookworm_backend/bookworm-backend-0.0.1-SNAPSHOT.jar
    - cd docker/bookworm_backend
    - docker build -t bookworm_backend .
    - docker tag bookworm_backend $BACKEND_IMAGE_PATH
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker push $BACKEND_IMAGE_PATH

build-postgres-image:
  stage: build-images
  script:
    - cd docker/bookworm_postgres
    - docker build -t bookworm_postgres .
    - docker tag bookworm_postgres $POSTGRES_IMAGE_PATH
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $PROJECT_REGISTRY_PATH
    - docker push $POSTGRES_IMAGE_PATH

deploy-containers:
  stage: deploy
  script:
    - apk update && apk add bash
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $PROJECT_REGISTRY_PATH
    - docker pull $BACKEND_IMAGE_PATH
    - docker tag $BACKEND_IMAGE_PATH bookworm_backend:latest
    - docker pull $POSTGRES_IMAGE_PATH
    - docker tag $POSTGRES_IMAGE_PATH bookworm_postgres:latest
    - cd docker && chmod +x ./wait-for-it.sh
    - docker-compose up -d bookworm_postgres && ./wait-for-it.sh --timeout=300 $BOOKWORM_HOST:5432
    - docker-compose up -d bookworm_keycloak && ./wait-for-it.sh --timeout=300 $BOOKWORM_HOST:9080
    - docker-compose up -d bookworm_backend && ./wait-for-it.sh --timeout=300 $BOOKWORM_HOST:8080

test-backend-api:
  stage: test-java
  image: gradle:6-jdk11-alpine
  script:
    - gradle check
  artifacts:
    paths:
      - build/karate-reports/**
      - build/reports/**
    expire_in: 1 hour

code-analysis:
  stage: sonar
  image: gradle:6-jdk11-alpine
  script:
    - apk update && apk add nodejs
    - gradle sonarqube -Dsonar.login=$SONAR_TOKEN -Dsonar.projectKey=$SONAR_PROJECT_KEY
  allow_failure: true
  only:
    - devel

clean-containers:
  stage: clean
  when: always
  script:
    - cd docker
    - docker-compose down --remove-orphans
